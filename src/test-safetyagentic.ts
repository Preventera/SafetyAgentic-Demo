// Test SafetyAgentic API Connection
// Nom de code: SafetyAgentic-Live-Connection-Test
// Localisation: SafeGraph/src/test-safetyagentic.ts

import { safetyAgenticAPI } from './services/safetyagentic-api';

async function testSafetyAgenticConnection() {
  console.log('üöÄ D√âBUT TEST CONNEXION SAFETYAGENTIC');
  console.log('=====================================');

  try {
    // TEST 1: Explorer la structure
    console.log('\nüîç TEST 1: Exploration structure des donn√©es...');
    const structure = await safetyAgenticAPI.exploreDataStructure();
    console.log('‚úÖ Structure r√©cup√©r√©e:', structure.length, '√©l√©ments');
    structure.forEach(item => {
      console.log(`  üìÅ ${item.name} (${item.type}) - ${item.size} bytes`);
    });

    // TEST 2: Statistiques temps r√©el
    console.log('\nüìà TEST 2: Statistiques temps r√©el...');
    const stats = await safetyAgenticAPI.getRealTimeStats();
    console.log('‚úÖ Stats r√©cup√©r√©es:', stats);

    // TEST 3: Aper√ßu donn√©es CNESST (limit√© pour test)
    console.log('\nüìä TEST 3: Aper√ßu donn√©es CNESST 2023...');
    const cnessData = await safetyAgenticAPI.fetchCNESSTData('2023');
    console.log(`‚úÖ CNESST 2023: ${cnessData.length} l√©sions r√©cup√©r√©es`);
    
    if (cnessData.length > 0) {
      console.log('üìã Exemple premi√®re l√©sion:', cnessData[0]);
    }

    // TEST 4: Donn√©es STORM
    console.log('\nüåç TEST 4: Donn√©es STORM internationales...');
    const stormData = await safetyAgenticAPI.fetchSTORMData();
    console.log(`‚úÖ STORM: ${stormData.length} entr√©es r√©cup√©r√©es`);

    console.log('\nüéâ TOUS LES TESTS R√âUSSIS !');
    console.log('=====================================');
    
    return {
      success: true,
      structure: structure.length,
      cnesst_entries: cnessData.length,
      storm_entries: stormData.length,
      stats
    };

  } catch (error) {
    console.error('‚ùå ERREUR DURANT LES TESTS:', error);
    return {
      success: false,
      error: error.message
    };
  }
}

// Fonction pour test rapide en d√©veloppement
async function quickTest() {
  console.log('‚ö° TEST RAPIDE - Exploration structure uniquement');
  
  try {
    const structure = await safetyAgenticAPI.exploreDataStructure();
    console.log('‚úÖ Connexion GitHub OK!');
    console.log('üìÅ Dossiers disponibles:');
    structure.forEach(item => {
      console.log(`  - ${item.name} (${item.type})`);
    });
    return true;
  } catch (error) {
    console.error('‚ùå Connexion √©chou√©e:', error);
    return false;
  }
}

// Export pour utilisation dans d'autres composants
export { testSafetyAgenticConnection, quickTest };