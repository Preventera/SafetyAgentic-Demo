// ================================================
// üöß IGNITIA OBSTACLE ANALYZER - EDGE FUNCTION
// ================================================
// Localisation: supabase/functions/ignitia-obstacle-analyzer/index.ts  
// Description: Analyse d'obstacles avec 100 prompts contextuels sp√©cialis√©s

import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

// ================================================
// üîß INTERFACES TYPESCRIPT
// ================================================

interface ObstacleContext {
  obstacle: 'donnees' | 'culture' | 'gouvernance' | 'technologie' | 'competences' | 'ethique';
  severity: 'faible' | 'moyen' | 'eleve';
  sector: string;
  specificContext?: string;
}

interface ObstacleAnalysisRequest {
  obstacles: ObstacleContext[];
  sector: string;
  analysisType: 'obstacle_deep_analysis';
  includePrompts: boolean;
}

// ================================================
// üß† BASE DE PROMPTS - 100 PROMPTS CONTEXTUELS
// ================================================

const OBSTACLE_PROMPTS_DATABASE = {
  donnees: {
    diagnostic: [
      "√âvaluez la qualit√© des donn√©es SST disponibles : compl√©tude, exactitude, fra√Æcheur, coh√©rence",
      "Analysez l'architecture de donn√©es actuelle : stockage, formats, accessibilit√©, interop√©rabilit√©", 
      "Identifiez les sources de donn√©es SST : syst√®mes RH, capteurs, rapports, incidents, formations",
      "Cartographiez les flux de donn√©es SST : collecte, traitement, validation, diffusion",
      "Auditez la gouvernance des donn√©es : propri√©t√©, responsabilit√©s, processus, contr√¥les"
    ],
    solutions: [
      "Concevez une strat√©gie de qualit√© des donn√©es avec indicateurs, processus de contr√¥le et correction automatis√©e",
      "Proposez une architecture data moderne : data lake, ETL/ELT, API, temps r√©el, cloud-native",
      "D√©veloppez un r√©f√©rentiel de donn√©es SST unifi√© avec taxonomie, m√©tadonn√©es et catalogue centralis√©",
      "Impl√©mentez des processus d'int√©gration de donn√©es : APIs, connecteurs, synchronisation temps r√©el",
      "Cr√©ez des pipelines de validation automatis√©e : r√®gles m√©tier, d√©tection d'anomalies, alertes qualit√©"
    ],
    implementation: [
      "S√©lectionnez les technologies de gestion de donn√©es adapt√©es au contexte SST de votre secteur",
      "Planifiez la migration des donn√©es legacy vers la nouvelle architecture en minimisant les risques",
      "Formez les √©quipes aux nouveaux outils de donn√©es et √©tablissez des processus de gouvernance",
      "Mettez en place des indicateurs de performance des donn√©es : SLA, KPIs qualit√©, tableaux de bord",
      "D√©veloppez une strat√©gie de sauvegarde et de r√©cup√©ration des donn√©es critiques SST"
    ]
  },

  culture: {
    diagnostic: [
      "√âvaluez le niveau d'acceptation de l'IA par les √©quipes SST : enqu√™tes, interviews, observations",
      "Analysez les r√©sistances au changement : peurs, m√©connaissance, habitudes, enjeux politiques",
      "Cartographiez les influenceurs et ambassadeurs potentiels dans l'organisation",
      "Identifiez les barri√®res culturelles sp√©cifiques au secteur et √† la culture d'entreprise",
      "Mesurez la maturit√© digitale g√©n√©rale des collaborateurs SST"
    ],
    solutions: [
      "Concevez un programme de conduite du changement sp√©cialis√© IA-SST avec phases progressives",
      "D√©veloppez une strat√©gie de communication positive : success stories, b√©n√©fices concrets, t√©moignages",
      "Cr√©ez un r√©seau d'ambassadeurs IA-SST avec formation, outils et reconnaissance",
      "Impl√©mentez des formations ludiques et pratiques : ateliers, simulations, learning by doing",
      "√âtablissez des m√©canismes de feedback et d'am√©lioration continue bas√©s sur l'√©coute des utilisateurs"
    ],
    implementation: [
      "Lancez des projets pilotes visibles avec des gains rapides pour cr√©er l'adh√©sion",
      "Organisez des sessions de d√©mystification de l'IA avec exemples concrets SST",
      "Mettez en place un accompagnement personnalis√© pour les utilisateurs r√©ticents",
      "Cr√©ez des communaut√©s de pratique IA-SST pour favoriser l'apprentissage entre pairs",
      "Int√©grez l'IA dans les processus RH : recrutement, √©valuation, d√©veloppement de carri√®re"
    ]
  },

  gouvernance: {
    diagnostic: [
      "Auditez le cadre de gouvernance existant : comit√©s, processus, politiques, responsabilit√©s",
      "√âvaluez la conformit√© r√©glementaire actuelle : RGPD, lois sectorielles, normes ISO",
      "Analysez les processus de prise de d√©cision et de validation des projets technologiques",
      "Identifiez les risques juridiques et √©thiques li√©s au d√©ploiement de l'IA en SST",
      "Cartographiez les parties prenantes internes et externes impact√©es par l'IA-SST"
    ],
    solutions: [
      "Concevez un cadre de gouvernance IA multi-niveaux : strat√©gique, op√©rationnel, technique",
      "D√©veloppez des politiques IA sp√©cifiques : √©thique, transparence, explicabilit√©, responsabilit√©",
      "Cr√©ez des processus d'approbation et de validation des algorithmes SST",
      "Impl√©mentez des m√©canismes de contr√¥le et d'audit continu des syst√®mes IA",
      "√âtablissez des protocoles de gestion des incidents et des biais algorithmiques"
    ],
    implementation: [
      "Formez un comit√© de gouvernance IA-SST avec repr√©sentants m√©tier, IT, juridique, √©thique",
      "D√©ployez des outils de monitoring et de logging pour assurer la tra√ßabilit√© des d√©cisions IA",
      "Mettez en place des revues p√©riodiques des performances et de la conformit√© des syst√®mes IA",
      "Cr√©ez des proc√©dures de documentation compl√®te : algorithmes, donn√©es, d√©cisions, impacts",
      "D√©veloppez des m√©triques de gouvernance : indicateurs de conformit√©, audit scores, KPIs √©thiques"
    ]
  },

  technologie: {
    diagnostic: [
      "Auditez l'infrastructure IT existante : serveurs, r√©seau, stockage, s√©curit√©, performance",
      "√âvaluez les capacit√©s de calcul pour l'IA : CPU, GPU, m√©moire, bande passante",
      "Analysez l'architecture applicative : syst√®mes legacy, APIs, microservices, int√©grations",
      "Identifiez les contraintes techniques : latence, disponibilit√©, scalabilit√©, maintenance",
      "Cartographiez l'√©cosyst√®me technologique : fournisseurs, outils, plateformes, standards"
    ],
    solutions: [
      "Concevez une architecture IA-SST moderne : cloud-native, conteneuris√©e, API-first",
      "S√©lectionnez des technologies adapt√©es : frameworks ML, plateformes MLOps, outils de d√©veloppement",
      "D√©veloppez une strat√©gie cloud hybride optimisant co√ªts, performance et s√©curit√©",
      "Impl√©mentez des pratiques DevOps/MLOps pour l'industrialisation des mod√®les IA",
      "Cr√©ez des standards techniques : coding guidelines, architecture patterns, bonnes pratiques"
    ],
    implementation: [
      "D√©ployez une plateforme MLOps compl√®te : d√©veloppement, test, d√©ploiement, monitoring",
      "Migrez progressivement vers une architecture microservices pour l'agilit√© et la scalabilit√©",
      "Impl√©mentez des solutions de monitoring avanc√© : performance, usage, alertes, dashboards",
      "Formez les √©quipes techniques aux nouvelles technologies et m√©thodologies IA",
      "√âtablissez des partenariats technologiques strat√©giques avec des fournisseurs sp√©cialis√©s IA-SST"
    ]
  },

  competences: {
    diagnostic: [
      "√âvaluez les comp√©tences IA actuelles : data science, ML engineering, IA m√©tier",
      "Analysez les besoins en comp√©tences par r√¥le : utilisateurs finaux, d√©veloppeurs, gestionnaires",
      "Identifiez les gaps de comp√©tences critiques pour le succ√®s des projets IA-SST",
      "Cartographiez les ressources de formation disponibles : interne, externe, certifications",
      "Mesurez la capacit√© d'apprentissage et d'adaptation de l'organisation"
    ],
    solutions: [
      "Concevez un plan de d√©veloppement des comp√©tences IA multi-niveaux et progressif",
      "Cr√©ez des parcours de formation personnalis√©s par profil : technique, m√©tier, management",
      "D√©veloppez un programme de certification IA-SST interne avec niveaux et badges",
      "Impl√©mentez des m√©thodes de formation innovantes : VR, gamification, peer learning",
      "√âtablissez des partenariats avec universit√©s et organismes de formation sp√©cialis√©s"
    ],
    implementation: [
      "Lancez une acad√©mie IA-SST interne avec cursus complets et ressources d√©di√©es",
      "Organisez des hackathons et challenges IA pour stimuler l'innovation et l'apprentissage",
      "Mettez en place du mentoring et coaching par des experts IA internes ou externes",
      "Cr√©ez des communaut√©s de pratique pour favoriser le partage de connaissances",
      "Int√©grez le d√©veloppement des comp√©tences IA dans les plans de carri√®re individuels"
    ]
  },

  ethique: {
    diagnostic: [
      "Auditez les enjeux √©thiques actuels : biais, transparence, √©quit√©, responsabilit√©",
      "√âvaluez l'impact potentiel de l'IA sur les collaborateurs : emploi, autonomie, surveillance",
      "Analysez les risques de discrimination et d'in√©quit√© dans les processus SST",
      "Identifiez les exigences de transparence et d'explicabilit√© par cas d'usage",
      "Cartographiez les attentes des parties prenantes en mati√®re d'IA responsable"
    ],
    solutions: [
      "D√©veloppez une charte √©thique IA-SST avec principes clairs et op√©rationnels",
      "Impl√©mentez des m√©canismes de d√©tection et de correction des biais algorithmiques",
      "Cr√©ez des processus d'√©valuation d'impact √©thique pour chaque projet IA",
      "√âtablissez des standards de transparence et d'explicabilit√© adapt√©s aux usages SST",
      "D√©veloppez des formations √† l'√©thique IA pour tous les acteurs concern√©s"
    ],
    implementation: [
      "Cr√©ez un comit√© d'√©thique IA-SST avec diversit√© de profils et d'expertises",
      "D√©ployez des outils d'audit algorithmique automatis√© pour d√©tecter les biais",
      "Impl√©mentez des m√©canismes de recours et de contestation des d√©cisions IA",
      "Organisez des consultations r√©guli√®res avec les parties prenantes sur l'√©thique IA",
      "Publiez des rapports de transparence sur l'usage de l'IA et ses impacts"
    ]
  }
};

// ================================================
// üéØ MOTEUR D'ANALYSE D'OBSTACLES
// ================================================

function analyzeObstacles(request: ObstacleAnalysisRequest): string {
  const { obstacles, sector, includePrompts } = request;
  
  let analysis = `# üöß Analyse Approfondie des Obstacles IA-SST\n\n`;
  analysis += `**Secteur:** ${sector}\n`;
  analysis += `**Nombre d'obstacles:** ${obstacles.length}\n`;
  analysis += `**Date d'analyse:** ${new Date().toLocaleDateString('fr-FR')}\n\n`;
  
  // R√©sum√© ex√©cutif
  analysis += `## üìä R√©sum√© Ex√©cutif\n`;
  const severityCounts = obstacles.reduce((acc, obs) => {
    acc[obs.severity] = (acc[obs.severity] || 0) + 1;
    return acc;
  }, {} as Record<string, number>);
  
  analysis += `**Distribution par gravit√©:**\n`;
  Object.entries(severityCounts).forEach(([severity, count]) => {
    const icon = severity === 'eleve' ? 'üî¥' : severity === 'moyen' ? 'üü°' : 'üü¢';
    analysis += `- ${icon} ${severity.charAt(0).toUpperCase() + severity.slice(1)}: ${count} obstacle(s)\n`;
  });
  analysis += `\n`;
  
  // Analyse d√©taill√©e par obstacle
  obstacles.forEach((obstacle, index) => {
    const obstaclePrompts = OBSTACLE_PROMPTS_DATABASE[obstacle.obstacle];
    const severityIcon = obstacle.severity === 'eleve' ? 'üî¥' : obstacle.severity === 'moyen' ? 'üü°' : 'üü¢';
    
    analysis += `## ${index + 1}. ${severityIcon} Obstacle: ${obstacle.obstacle.toUpperCase()}\n`;
    analysis += `**Gravit√©:** ${obstacle.severity}\n`;
    if (obstacle.specificContext) {
      analysis += `**Contexte sp√©cifique:** ${obstacle.specificContext}\n`;
    }
    analysis += `\n`;
    
    // Phase diagnostic
    analysis += `### üîç Phase Diagnostic\n`;
    obstaclePrompts.diagnostic.forEach((prompt, idx) => {
      analysis += `${idx + 1}. ${prompt}\n`;
    });
    analysis += `\n`;
    
    // Solutions recommand√©es
    analysis += `### üí° Solutions Recommand√©es\n`;
    obstaclePrompts.solutions.forEach((solution, idx) => {
      analysis += `${idx + 1}. ${solution}\n`;
    });
    analysis += `\n`;
    
    // Plan d'impl√©mentation
    analysis += `### üöÄ Plan d'Impl√©mentation\n`;
    obstaclePrompts.implementation.forEach((impl, idx) => {
      analysis += `${idx + 1}. ${impl}\n`;
    });
    analysis += `\n`;
    
    // M√©triques de succ√®s
    analysis += `### üìà M√©triques de Succ√®s\n`;
    const metrics = generateSuccessMetrics(obstacle.obstacle, obstacle.severity);
    metrics.forEach((metric, idx) => {
      analysis += `${idx + 1}. ${metric}\n`;
    });
    analysis += `\n---\n\n`;
  });
  
  // Plan d'action global
  analysis += `## üéØ Plan d'Action Global\n`;
  analysis += generateGlobalActionPlan(obstacles, sector);
  
  // Prompts contextuels (si demand√©s)
  if (includePrompts) {
    analysis += `\n## üß† Prompts Contextuels Recommand√©s\n`;
    obstacles.forEach((obstacle, index) => {
      analysis += `### ${obstacle.obstacle.toUpperCase()} - Prompts Sp√©cialis√©s\n`;
      const allPrompts = [
        ...OBSTACLE_PROMPTS_DATABASE[obstacle.obstacle].diagnostic,
        ...OBSTACLE_PROMPTS_DATABASE[obstacle.obstacle].solutions,
        ...OBSTACLE_PROMPTS_DATABASE[obstacle.obstacle].implementation
      ];
      
      // S√©lectionner les 5 prompts les plus pertinents selon la gravit√©
      const selectedPrompts = selectRelevantPrompts(allPrompts, obstacle.severity);
      selectedPrompts.forEach((prompt, idx) => {
        analysis += `${idx + 1}. ${prompt}\n`;
      });
      analysis += `\n`;
    });
  }
  
  return analysis;
}

function generateSuccessMetrics(obstacle: string, severity: string): string[] {
  const baseMetrics = {
    donnees: [
      "Taux de qualit√© des donn√©es SST > 95%",
      "Temps de mise √† disposition des donn√©es < 24h",
      "Nombre d'erreurs de donn√©es < 1%"
    ],
    culture: [
      "Taux d'adoption des outils IA > 80%",
      "Score de satisfaction utilisateurs > 4/5",
      "Nombre de r√©sistances actives < 5%"
    ],
    gouvernance: [
      "Score de conformit√© r√©glementaire > 95%",
      "D√©lai de validation des projets IA < 2 semaines",
      "Nombre d'incidents de gouvernance = 0"
    ],
    technologie: [
      "Disponibilit√© des syst√®mes IA > 99.5%",
      "Performance des mod√®les conforme aux SLA",
      "Temps de d√©ploiement < 1 semaine"
    ],
    competences: [
      "Score de comp√©tences IA moyen > 7/10",
      "Taux de formation compl√©t√©e > 90%",
      "Nombre de certifications obtenues"
    ],
    ethique: [
      "Score d'audit √©thique > 8/10",
      "Nombre de biais d√©tect√©s et corrig√©s",
      "Transparence des d√©cisions IA = 100%"
    ]
  };
  
  return baseMetrics[obstacle] || ["M√©triques sp√©cifiques √† d√©finir"];
}

function selectRelevantPrompts(prompts: string[], severity: string): string[] {
  // S√©lectionner 5 prompts selon la gravit√©
  const count = severity === 'eleve' ? 7 : severity === 'moyen' ? 5 : 3;
  return prompts.slice(0, count);
}

function generateGlobalActionPlan(obstacles: ObstacleContext[], sector: string): string {
  let plan = `### üéØ Priorisation des Actions\n\n`;
  
  // Trier par gravit√©
  const sortedObstacles = obstacles.sort((a, b) => {
    const severityOrder = { 'eleve': 3, 'moyen': 2, 'faible': 1 };
    return severityOrder[b.severity] - severityOrder[a.severity];
  });
  
  plan += `**Phase 1 (0-3 mois) - Obstacles critiques:**\n`;
  sortedObstacles.filter(obs => obs.severity === 'eleve').forEach((obs, idx) => {
    plan += `${idx + 1}. Traiter l'obstacle ${obs.obstacle} (gravit√© √©lev√©e)\n`;
  });
  
  plan += `\n**Phase 2 (3-6 mois) - Obstacles mod√©r√©s:**\n`;
  sortedObstacles.filter(obs => obs.severity === 'moyen').forEach((obs, idx) => {
    plan += `${idx + 1}. Traiter l'obstacle ${obs.obstacle} (gravit√© moyenne)\n`;
  });
  
  plan += `\n**Phase 3 (6-12 mois) - Obstacles mineurs:**\n`;
  sortedObstacles.filter(obs => obs.severity === 'faible').forEach((obs, idx) => {
    plan += `${idx + 1}. Traiter l'obstacle ${obs.obstacle} (gravit√© faible)\n`;
  });
  
  plan += `\n### üí∞ Budget Estim√©\n`;
  plan += `- Obstacles √©lev√©s: 60% du budget total\n`;
  plan += `- Obstacles moyens: 30% du budget total\n`;
  plan += `- Obstacles faibles: 10% du budget total\n\n`;
  
  plan += `### üë• Ressources Requises\n`;
  plan += `- Chef de projet IA-SST (1 ETP)\n`;
  plan += `- Experts techniques sp√©cialis√©s (2-3 ETP)\n`;
  plan += `- Champions m√©tier par obstacle (0.2 ETP chacun)\n`;
  plan += `- Support externe si n√©cessaire\n\n`;
  
  return plan;
}

// ================================================
// üöÄ FONCTION PRINCIPALE
// ================================================

serve(async (req) => {
  // CORS headers
  const corsHeaders = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
  }

  // Handle CORS preflight
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    // Parse request
    const request: ObstacleAnalysisRequest = await req.json()
    console.log('üöß IGNITIA Obstacle Analyzer Request:', request.obstacles.length, 'obstacles')

    // Generate obstacle analysis
    const analysis = analyzeObstacles(request)
    console.log('üìù Obstacle Analysis Generated for', request.obstacles.length, 'obstacles')

    console.log('‚úÖ IGNITIA Obstacle Analyzer Success')

    return new Response(
      JSON.stringify({ 
        result: analysis,
        metadata: {
          obstaclesCount: request.obstacles.length,
          sector: request.sector,
          analysisType: request.analysisType,
          includePrompts: request.includePrompts,
          timestamp: new Date().toISOString(),
          promptsDatabase: Object.keys(OBSTACLE_PROMPTS_DATABASE).length
        }
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200,
      },
    )

  } catch (error) {
    console.error('‚ùå IGNITIA Obstacle Analyzer Error:', error)
    
    return new Response(
      JSON.stringify({ 
        error: error.message,
        type: 'ignitia_obstacle_analyzer_error',
        timestamp: new Date().toISOString()
      }),
      {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500,
      },
    )
  }
})